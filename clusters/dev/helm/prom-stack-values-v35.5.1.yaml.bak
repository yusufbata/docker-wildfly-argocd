apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 35.5.1
    helm:
      releaseName: kube-prometheus-stack
      values: |
        alertmanager:
          enabled: true
        defaultRules:
          create: true
          rules:
            etcd: false
            kubeScheduler: false
        grafana:
          enabled: true
        kubeEtcd:
          enabled: false
        kubeScheduler:
          enabled: false
        prometheus:
          enabled: true
          additionalServiceMonitors:
            - name: "ambassador-monitor"
              selector:
                matchLabels:
                  service: "ambassador-admin"
              namespaceSelector:
                matchNames:
                  - ambassador
              endpoints:
                - port: "ambassador-admin"
            - name: "loki-monitor"
              selector:
                matchLabels:
                  app: loki
                  release: loki
              namespaceSelector:
                matchNames:
                  - loki-stack
              endpoints:
                - port: "http-metrics"
            - name: "promtail-monitor"
              selector:
                matchLabels:
                  app: promtail
                  release: loki
              namespaceSelector:
                matchNames:
                  - loki-stack
              endpoints:
                - port: "http-metrics"
          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                spec:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 5Gi
                  storageClassName: do-block-storage
        prometheusOperator:
          enabled: true
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true # create destination namespace if not present
